'scopeName': 'source.astro'
'name': 'Astro'
'fileTypes': ['astro']
'patterns': [
  {
    'include': '#frontmatter'
  },
  {
    'include': '#jsx-expression-inside-tags'
  },
  {
    'include': '#jsx-conditional-operators'
  },
  {
    'include': '#jsx-expression'
  },
  {
    'include': '#component-tag'
  },
  {
    'include': '#html-tag'
  },
  {
    'include': '#framework-components'
  },
  {
    'include': 'text.html.basic'
  }
]

'repository':
  'frontmatter':
    'name': 'meta.frontmatter.astro'
    'begin': '\\A---'
    'beginCaptures':
      '0': 'name': 'punctuation.definition.frontmatter.begin.astro'
    'end': '^---'
    'endCaptures':
      '0': 'name': 'punctuation.definition.frontmatter.end.astro'
    'patterns': [
      { 'include': 'source.ts' }
    ]

  'object-key':
    'match': '([a-zA-Z_$][\\w$]*)\\s*(?=:)'
    'name': 'variable.other.property.js'

  'component-tag':
    'name': 'meta.tag.component.astro'
    'begin': '(<)([A-Z][\\w\\.]*)'
    'beginCaptures':
      '1': 'name': 'punctuation.definition.tag.begin.astro'
      '2': 'name': 'entity.name.tag.component.astro'
    'end': '(/?>)'
    'endCaptures':
      '1': 'name': 'punctuation.definition.tag.end.astro'
    'patterns': [
      { 'include': '#tag-attributes' }
      { 'include': '#jsx-expression-inside-tags' }
    ]

  'html-tag':
    'name': 'meta.tag.html.astro'
    'begin': '(<)([a-z][\\w\\.\\-]*)'
    'beginCaptures':
      '1': 'name': 'punctuation.definition.tag.begin.astro'
      '2': 'name': 'entity.name.tag.html.astro'
    'end': '(/?>)'
    'endCaptures':
      '1': 'name': 'punctuation.definition.tag.end.astro'
    'patterns': [
      { 'include': '#tag-attributes' }
      { 'include': '#jsx-expression-inside-tags' }
    ]

  'framework-components':
    'patterns': [
      # React/Preact component detection
      {
        'begin': '(<)([A-Z][\\w\\.]*\\.jsx|[A-Z][\\w\\.]*\\.tsx)'
        'beginCaptures':
          '1': 'name': 'punctuation.definition.tag.begin.astro'
          '2': 'name': 'entity.name.tag.component.react.astro'
        'end': '(/?>)'
        'endCaptures':
          '1': 'name': 'punctuation.definition.tag.end.astro'
        'patterns': [
          { 'include': 'source.js.jsx' }
          { 'include': '#tag-attributes' }
        ]
      },
      # Svelte component detection
      {
        'begin': '(<)([A-Z][\\w\\.]*\\.svelte)'
        'beginCaptures':
          '1': 'name': 'punctuation.definition.tag.begin.astro'
          '2': 'name': 'entity.name.tag.component.svelte.astro'
        'end': '(/?>)'
        'endCaptures':
          '1': 'name': 'punctuation.definition.tag.end.astro'
        'patterns': [
          { 'include': '#tag-attributes' }
          { 'include': '#jsx-expression-inside-tags' }
        ]
      },
      # Vue component detection
      {
        'begin': '(<)([A-Z][\\w\\.]*\\.vue)'
        'beginCaptures':
          '1': 'name': 'punctuation.definition.tag.begin.astro'
          '2': 'name': 'entity.name.tag.component.vue.astro'
        'end': '(/?>)'
        'endCaptures':
          '1': 'name': 'punctuation.definition.tag.end.astro'
        'patterns': [
          { 'include': '#tag-attributes' }
          { 'include': '#jsx-expression-inside-tags' }
        ]
      }
    ]

  'tag-attributes':
    'patterns': [
      {
        'include': '#directives'
      },
      {
        'include': '#jsx-attribute'
      },
      {
        'include': '#html-attribute'
      }
    ]

  'directives':
    'patterns': [
      # Client directives - https://docs.astro.build/en/reference/directives-reference/
      {
        'match': '(client:load|client:idle|client:visible|client:media|client:only|client:visible)'
        'name': 'keyword.control.directive.astro'
      },
      # Altri direttive
      {
        'match': '(transition:animate|transition:name|transition:persist)'
        'name': 'keyword.control.directive.astro'
      }
    ]

  'jsx-conditional-operators':
    'patterns': [
      {
        'match': '&&(?!\\=)|\\|\\|(?!\\=)|\\?\\s*(?!\\=)|\\:(?!\\=)'
        'name': 'keyword.operator.logical.js'
      }
    ]

  'jsx-attribute':
    'name': 'meta.attribute.jsx.astro'
    'begin': '\\{'
    'beginCaptures':
      '0': 'name': 'punctuation.section.embedded.begin.astro'
    'end': '\\}'
    'endCaptures':
      '0': 'name': 'punctuation.section.embedded.end.astro'
    'patterns': [
      { 'include': '#jsx-conditional-operators' }
      { 'include': '#object-key' }
      { 'include': 'source.js.jsx' }
    ]

  'html-attribute':
    'name': 'meta.attribute.html.astro'
    'match': '([a-zA-Z0-9_:-]+)(?:\\s*(=)\\s*(?:(")([^"]*)(")|(\')([^\']*)(\')|([^\\s>]+)))?'
    'captures':
      '1': 'name': 'entity.other.attribute-name.astro'
      '2': 'name': 'punctuation.separator.key-value.astro'
      '3': 'name': 'punctuation.definition.string.begin.astro'
      '4': 'name': 'string.quoted.double.astro'
      '5': 'name': 'punctuation.definition.string.end.astro'
      '6': 'name': 'punctuation.definition.string.begin.astro'
      '7': 'name': 'string.quoted.single.astro'
      '8': 'name': 'punctuation.definition.string.end.astro'
      '9': 'name': 'string.unquoted.astro'

  'jsx-expression':
    'name': 'meta.embedded.expression.astro'
    'begin': '{(?!\\s*\/\*|\\s*\/\/)'
    'beginCaptures':
      '0': 'name': 'punctuation.section.embedded.begin.astro'
    'end': '}'
    'endCaptures':
      '0': 'name': 'punctuation.section.embedded.end.astro'
    'patterns': [
      { 'include': '#jsx-conditional-operators' }
      { 'include': '#object-key' }
      { 'include': 'source.js.jsx' }
    ]

  'jsx-expression-inside-tags':
    'name': 'meta.embedded.expression.tag.attribute.astro'
    'begin': '(class|className|style)\\s*=\\s*{`'
    'beginCaptures':
      '0': 'name': 'meta.attribute-with-value.html'
      '1': 'name': 'entity.other.attribute-name.html'
    'end': '`}'
    'endCaptures':
      '0': 'name': 'meta.embedded.expression.end.astro'
    'patterns': [
      {
        'match': '\\${([^}]*)}'
        'name': 'meta.template.expression.js'
        'captures':
          '0': 'name': 'entity.name.tag.js'
          '1': 'name': 'source.js.jsx'
      },
      {
        'match': '[^${}]+'
        'name': 'string.template.js'
      }
    ]
